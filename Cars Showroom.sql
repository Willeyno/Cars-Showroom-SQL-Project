-- STEVE CAR SHOWROOM ANALYSIS PROJECT

-- TASK 1: Create a database for the company

CREATE DATABASE Car_Showroom;

-- TASK 2: Create a table for cars


CREATE TABLE Cars (	car_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
					make VARCHAR (50) NOT NULL,
					type VARCHAR (50) NOT NULL,
					style VARCHAR (50) NOT NULL,
					cost_$ INT NOT NULL);

-- TASK 3: Create a table for Sales

CREATE TABLE Sales (sale_id INT PRIMARY KEY NOT NULL,
					car_id INT,salesman_id INT,
					purchase_date DATE,FOREIGN KEY (car_id) REFERENCES cars(car_id),
					FOREIGN KEY (salesman_id) REFERENCES salespersons(salesman_id));

-- TASK 4: Create a table for Salespersons

CREATE TABLE salespersons (salesman_id INT PRIMARY KEY,
							name VARCHAR(50),
							age INT,city VARCHAR(50));

-- Task 5: Insert records from the table above into their respective tables you have created


-- inserting into Cars table

SET IDENTITY_INSERT Cars ON
INSERT INTO Cars (car_id, make, type, style, cost_$)
VALUES  (1, 'Honda', 'Civic', 'Sedan', 30000),
		(2, 'Toyota', 'Corolla', 'Hatchback', 25000),
		(3, 'Ford', 'Explorer', 'SUV', 40000),
		(4, 'Chevrolet', 'Camaro', 'Coupe', 36000),
		(5, 'BMW', 'X5', 'SUV', 55000),
		(6, 'Audi', 'A4', 'Sedan', 48000),
		(7, 'Mercedes', 'C-Class', 'Coupe', 60000),
		(8, 'Nissan', 'Altima', 'Sedan', 26000);
SET IDENTITY_INSERT Cars OFF


-- inserting into salespersons table

INSERT INTO salespersons (salesman_id, name, age, city) 
				VALUES (1, 'John Smith', 28, 'New York'),
						(2, 'Emily Wong', 35, 'San Fran'),
						(3, 'Tom Lee', 42, 'Seattle'),
						(4, 'Lucy Chen', 31, 'LA');

-- inserting into Sales table

INSERT INTO sales (sale_id, car_id, salesman_id, purchase_date) 
VALUES (1, 1, 1, '2021-01-01'),
	   (2, 3, 3, '2021-02-03'),
	   (3, 2, 2, '2021-02-10'),
	   (4, 5, 4, '2021-03-01'),
	   (5, 8, 1, '2021-04-02'),
	   (6, 2, 1, '2021-05-05'),
	   (7, 4, 2, '2021-06-07'),
	   (8, 5, 3, '2021-07-09'),
	   (9, 2, 4, '2022-01-01'),
	   (10, 1, 3, '2022-02-03'),
	   (11, 8, 2, '2022-02-10'),
	   (12, 7, 2, '2022-03-01'),
	   (13, 5, 3, '2022-04-02'),
	   (14, 3, 1, '2022-05-05'),
	   (15, 5, 4, '2022-06-07'),
	   (16,1, 2, '2022-07-09'),
	   (17, 2, 3, '2023-01-01'),
	   (18, 6, 3, '2023-02-03'),
	   (19, 7, 1, '2023-02-10'),
	   (20, 4, 4, '2023-03-01');

	   -- Selecting all columns from all tables to check for correct Data entry

	   SELECT * FROM sales;

	   SELECT * FROM salespersons;

	   SELECT * FROM Cars;


/*OBJECTIVES

The primary objective is to identify key insights based on specific questions, analyse the
business and provide recommendations for improvement. Determine which cars generate
 highest and lowest revenue.*/


 /* Questions
1. What are the details of all cars purchased in the year 2022?
2. What is the total number of cars sold by each sales person?
3. What is the total revenue generated by each sales person?
4. What is the total revenue generated by each car type?
5. What are the details of the cars sold by Emily Wong in 2021?
6. What is the total revenue generated by hatchback car?
7. What is the total revenue generated by SUV cars? 
 */


  -- joining all tables together to gain insight
 SELECT * FROM Cars
 INNER JOIN Sales 
 ON Cars.car_id = Sales.car_id
 INNER JOIN [dbo].[salespersons]
 ON Sales.salesman_id = salespersons.salesman_id


 -- 1. What are the details of all cars purchased in the year 2022?

 SELECT * FROM Cars
 INNER JOIN Sales 
 ON Cars.car_id = Sales.car_id
 WHERE DATEPART(yy, purchase_date) = 2022;


 -- 2. What is the total number of cars sold by each sales person?


SELECT salespersons.salesman_id, salespersons.name, COUNT(*) AS total_no_of_cars FROM salespersons
INNER JOIN Sales ON 
salespersons.salesman_id = Sales.salesman_id
GROUP BY salespersons.salesman_id, salespersons.name;


-- 3. What is the total revenue generated by each sales person?

SELECT salespersons.salesman_id, salespersons.name, SUM(Cars.cost_$) AS total_revenue FROM salespersons
 INNER JOIN Sales 
 ON salespersons.salesman_id = Sales.car_id
 INNER JOIN Cars
 ON Sales.salesman_id = Cars.car_id
 GROUP BY salespersons.salesman_id, salespersons.name;



 -- 4. What is the total revenue generated by each car type?

 SELECT Cars.car_id, Cars.type, SUM(Cars.cost_$) AS total_revenue FROM salespersons
 INNER JOIN Sales 
 ON salespersons.salesman_id = Sales.car_id
 INNER JOIN Cars
 ON Sales.salesman_id = Cars.car_id
 GROUP BY Cars.car_id, Cars.type;

 
 -- 5. What are the details of the cars sold by Emily Wong in 2021?

 SELECT Cars.car_id, Cars.make, 
		Cars.type, Cars.style, 
		Cars.cost_$, salespersons.salesman_id, 
		salespersons.name, Sales.purchase_date
FROM Cars
		INNER JOIN Sales
 ON Cars.car_id = Sales.car_id
		INNER JOIN salespersons
ON Sales.salesman_id = salespersons.salesman_id
WHERE salespersons.name = 'Emily Wong' AND DATEPART(yy, purchase_date) = 2021;


-- 6. What is the total revenue generated by hatchback car?

SELECT car_id, style, SUM(Cars.cost_$) AS 'total revenue by Hatchback car' FROM Cars
GROUP BY car_id, style
HAVING style =  'Hatchback'; 



-- 7. What is the total revenue generated by SUV cars? 

SELECT car_id, style, SUM(Cars.cost_$) AS 'total revenue by Hatchback car' FROM Cars
GROUP BY car_id, style
HAVING style =  'SUV'; 
